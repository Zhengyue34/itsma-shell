1.依赖关系   
#安装前准备，事先准备安装开发包组“development tools”“development libraries”，同时安装pcre-devel包  
yum grouplist
#需要安装development tools，server platform develop等 安装过程中可能会需要的  
yum -y groupinstall "......"
yum -y install pcre-devel   

2.安装
#下载nginx的tar包，需要各节点时间同步
wget http://nginx.org/download/nginx-1.8.0.tar.gz
tar xf nginx-1.8.0.tar.gz
ntpdate .......
#为nginx建立普通用户组与普通用户
groupadd -r -g 108 nginx
useradd -r -g 108 -u 108 nginx   
#开始编译安装
./configure \
--prefix=/usr \   
--sbin-path=/usr/sbin/nginx \  
--conf-path=/etc/nginx/nginx.conf \  
--error-log-path=/var/log/nginx/error.log  \ 
--http-log-path=/var/log/nginx/access.log  \ 
--pid-path=/var/run/nginx/nginx.pid \   
--lock-path=/var/lock/nginx.lock   \
--user=nginx  \ 
--group=nginx   \
--with-http_ssl_module   \
--with-http_flv_module   \
--with-http_stub_status_module  \ 
--with-http_gzip_static_module  \ 
--http-client-body-temp-path=/var/tmp/nginx/client/  \  
--http-proxy-temp-path=/var/tmp/nginx/proxy/  \ 
--http-fastcgi-temp-path=/var/tmp/nginx/fcgi/   \
--http-uwsgi-temp-path=/var/tmp/nginx/uwsgi   \
--http-scgi-temp-path=/var/tmp/nginx/scgi   \
--with-pcre
#过程中可能还会缺失一些库，都可以用yum安装
make && make install

3.为nginx提供SysV init脚本（添加Nginx为系统服务，实现service nginx start）
vi /etc/init.d/nginx
#!/bin/sh
#
# nginx - this script starts and stops the nginx daemon
#
# chkconfig:   - 85 15
# description:  Nginx is an HTTP(S) server, HTTP(S) reverse \
#               proxy and IMAP/POP3 proxy server
# processname: nginx
# config:      /etc/nginx/nginx.conf
# config:      /etc/sysconfig/nginx
# pidfile:     /var/run/nginx.pid
# Source function library.
. /etc/rc.d/init.d/functions
# Source networking configuration.
. /etc/sysconfig/network
# Check that networking is up.
[ "$NETWORKING" = "no" ] && exit 0
nginx="/usr/sbin/nginx"
prog=$(basename $nginx)
NGINX_CONF_FILE="/etc/nginx/nginx.conf"
[ -f /etc/sysconfig/nginx ] && . /etc/sysconfig/nginx
lockfile=/var/lock/subsys/nginx
make_dirs() {
   # make required directories
   user=`nginx -V 2>&1 | grep "configure arguments:" | sed 's/[^*]*--user=\([^ ]*\).*/\1/g' -`
   options=`$nginx -V 2>&1 | grep 'configure arguments:'`
   for opt in $options; do
       if [ `echo $opt | grep '.*-temp-path'` ]; then
           value=`echo $opt | cut -d "=" -f 2`
           if [ ! -d "$value" ]; then
               # echo "creating" $value
               mkdir -p $value && chown -R $user $value
           fi
       fi
   done
}
start() {
    [ -x $nginx ] || exit 5
    [ -f $NGINX_CONF_FILE ] || exit 6
    make_dirs
    echo -n $"Starting $prog: "
    daemon $nginx -c $NGINX_CONF_FILE
    retval=$?
    echo
    [ $retval -eq 0 ] && touch $lockfile
    return $retval
}
stop() {
    echo -n $"Stopping $prog: "
    killproc $prog -QUIT
    retval=$?
    echo
    [ $retval -eq 0 ] && rm -f $lockfile
    return $retval
}
restart() {
    configtest || return $?
    stop
    sleep 1
    start
}
reload() {
    configtest || return $?
    echo -n $"Reloading $prog: "
    killproc $nginx -HUP
    RETVAL=$?
    echo
}
force_reload() {
    restart
}
configtest() {
  $nginx -t -c $NGINX_CONF_FILE
}
rh_status() {
    status $prog
}
rh_status_q() {
    rh_status >/dev/null 2>&1
}
case "$1" in
    start)
        rh_status_q && exit 0
        $1
        ;;
    stop)
        rh_status_q || exit 0
        $1
        ;;
    restart|configtest)
        $1
        ;;
    reload)
        rh_status_q || exit 7
        $1
        ;;
    force-reload)
        force_reload
        ;;
    status)
        rh_status
        ;;
    condrestart|try-restart)
        rh_status_q || exit 0
            ;;
    *)
        echo $"Usage: $0 {start|stop|status|restart|condrestart|try-restart|reload|force-reload|configtest}"
        exit 2
esac

chmod +x /etc/init.d/nginx

4.添加至服务管理列表，并让其开机自动启动
chkconfig --add nginx
chkconfig nginx --list
nginx              0:off    1:off    2:off    3:off    4:off    5:off    6:off
service nginx start
#至此web服务启动，查看一下端口
netstat -ntlp | grep :80
#在web输入localhost的IP即可访问nginx.
